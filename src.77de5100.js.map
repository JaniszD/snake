{"version":3,"sources":["constants.ts","Utils.ts","Locations.ts","Piece.ts","Directions.ts","Game.ts","Level.ts","levels/level-1.ts","levels/level-2.ts","levels/level-3.ts","levels/level-4.ts","index.ts","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["export enum keys {\n  RETURN = 13,\n  SPACE = 32,\n  LEFT = 37,\n  UP = 38,\n  RIGHT = 39,\n  DOWN = 40,\n  C = 67,\n  G = 71,\n  J = 74,\n  K = 75\n}\n\nexport const SIZE = 20;\nexport const MARGIN = 60;\nexport const SLOWEST = 250;\nexport const FASTEST = 0;\n","import { SIZE } from './constants';\n\nnamespace Utils {\n  export const rand = (min: number, max: number, reduce: number = SIZE): number => {\n    const num = Math.floor(Math.random() * (max - min)) + min;\n    return num - (num % reduce);\n  };\n\n  export const snap = (num: number, point = SIZE): number => {\n    const bottom = num - (num % point);\n    const top = bottom + point;\n\n    return num - bottom <= top - num ? bottom : top;\n  };\n\n  export const removeNode = (el: Element): void => {\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n  };\n\n  export const bound = (num: number, min: number, max: number): number => {\n    return Math.max(Math.min(num, max), min);\n  };\n\n  export const debounce = <T extends Function>(fun: T, wait: number) => {\n    let id: number;\n    return (...args: any[]) => {\n      clearTimeout(id);\n      id = setTimeout(() => fun(...args), wait);\n    };\n  };\n}\n\nexport default Utils;\n","namespace Locations {\n  const data: { [location: string]: boolean } = {};\n\n  export const set = (x: number, y: number): void => {\n    data[`${x}:${y}`] = true;\n  };\n\n  export const remove = (x: number, y: number): void => {\n    delete data[`${x}:${y}`];\n  };\n\n  export const has = (x: number, y: number): boolean => {\n    return data[`${x}:${y}`] === true;\n  };\n\n  export const get = () => {\n    return data;\n  };\n}\n\nexport default Locations;\n","import { SIZE } from './constants';\nimport Utils from './Utils';\nimport Locations from './Locations';\n\ntype PieceParams = {\n  x: number;\n  y: number;\n  type?: string;\n  direction?: string;\n  next?: Piece | null;\n  prev?: Piece | null;\n};\n\nexport default class Piece {\n  next: Piece | null;\n\n  prev: Piece | null;\n\n  x: number;\n\n  y: number;\n\n  el: HTMLDivElement;\n\n  direction: string;\n\n  type: string;\n\n  constructor ({\n    x,\n    y,\n    type = 'body',\n    direction = 'RIGHT',\n    next = null,\n    prev = null,\n  }: PieceParams) {\n    this.direction = direction;\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.el = document.createElement('div');\n    this.next = next;\n    this.prev = prev;\n    // Enable for a neat effect\n    // this.el.innerHTML = \"&#10096;\";\n    this.setType(type);\n    this.setPos(this.x, this.y);\n    // this.applyClass();\n    document.body.appendChild(this.el);\n  }\n\n  bend (headDirection: string) {\n    if (this.direction !== headDirection) {\n      this.el.className = '';\n      this.el.classList.add(\n        'cell',\n        this.type,\n        headDirection,\n        `${headDirection}-${this.direction}`\n      );\n      this.direction = headDirection;\n    }\n  }\n\n  setPos (x: number, y: number): void {\n    // CSS move the element\n    this.el.style.top = `${y}px`;\n    this.el.style.left = `${x}px`;\n\n    // this.el.style.transform = `translate(${x}px, ${y}px)`;\n\n    // reset CSS classnames basically\n    this.applyClass();\n\n    // Save the location of this piece to occupied spaces\n    // But don't do this, if we are the food or head because;\n    // - Head cannot collide with itself\n    // - We want to collide with food :)\n    if (this.type !== 'head' && this.type !== 'food') {\n      Locations.set(x, y);\n    }\n  }\n\n  move (x: number, y: number, direction: string = 'RIGHT'): void {\n    let X = x;\n    let Y = y;\n\n    // Transition through walls\n    if (x < 0) {\n      X = Utils.snap(document.body.clientWidth) - SIZE;\n    } else if (y < 0) {\n      Y = Utils.snap(document.body.clientHeight) - SIZE;\n    } else if (x >= Utils.snap(document.body.clientWidth)) {\n      X = 0;\n    } else if (y >= Utils.snap(document.body.clientHeight)) {\n      Y = 0;\n    }\n\n    // Save the old direction\n    const tDirection = this.direction;\n    // Set new direction of the piece\n    this.direction = direction;\n    // Move HTML Element to new spot\n    this.setPos(X, Y);\n    // If there is a next piece move it to old position\n    if (this.next !== null) {\n      // If this piece is a head piece, immediate piece should receive heads current\n      // direction instead of old one this is needed to have a fluid motion\n      this.next.move(this.x, this.y, this.type === 'head' ? this.direction : tDirection);\n    } else {\n      // We are the last piece, previous position\n      // is now empty, clear it\n      Locations.remove(this.x, this.y);\n    }\n\n    // if I\"m part of body and no one is following me\n    // then I must be the tail\n    if (this.next === null && this.type === 'body') {\n      this.el.classList.add('tail');\n    }\n\n    // if me and the piece following me are at the same spot\n    // then piece following me must be the food we just swallowed\n    if (this.next !== null && this.next.x === X && this.next.y === Y) {\n      this.next.el.classList.add('gulp');\n    }\n\n    // Bendy corners\n    if (this.next !== null && this.direction !== this.next.direction) {\n      this.el.classList.add(`${this.direction}-${this.next.direction}`);\n    }\n\n    // store new values\n    this.x = X;\n    this.y = Y;\n  }\n\n  setType (type: string): void {\n    this.type = type;\n    this.applyClass();\n  }\n\n  applyClass (): void {\n    this.el.className = '';\n    this.el.classList.add('cell', this.type, this.direction);\n  }\n\n  remove (): void {\n    // Remove the piece, it\"s location and HTML element\n    // This is needed to free up memory\n    Utils.removeNode(this.el);\n    Locations.remove(this.x, this.y);\n\n    // Do the same for all linked pieces\n    if (this.next) {\n      this.next.remove();\n      this.next = null;\n    }\n  }\n}\n","import { keys } from './constants';\n\nnamespace Directions {\n  let queue: number[] = [];\n  let current: number = keys.RIGHT;\n\n  export const set = (key: number): void => {\n    queue.push(key);\n  };\n\n  export const get = (): number => {\n    return current;\n  };\n\n  export const pop = (): number => {\n    if (queue.length > 0) {\n      current = queue.shift() as number;\n    }\n    return get();\n  };\n\n  export const flush = (): void => {\n    queue = [];\n    current = keys.RIGHT;\n  };\n\n  export const peek = (): number => {\n    return queue.length > 0 ? queue[queue.length - 1] : current;\n  };\n}\n\nexport default Directions;\n","import { SIZE, MARGIN, SLOWEST, FASTEST, keys } from './constants';\nimport Piece from './Piece';\nimport Utils from './Utils';\nimport Level from './Level';\nimport Locations from './Locations';\nimport Directions from './Directions';\n\n// window.Locations = Locations;\nexport default class Game {\n  head: Piece;\n\n  tail: Piece;\n\n  food: Piece | null = null;\n\n  length: number = 0;\n\n  highScore: number = 0;\n\n  score: number = 0;\n\n  currentLevel: Level | null = null;\n\n  private moving: boolean = false;\n\n  private paused: boolean = false;\n\n  private gridVisible: boolean = false;\n\n  private debugSpeed: number = 0;\n\n  private keyHeld: number = 0;\n\n  private noClip: boolean = false;\n\n  constructor (private levels: Level[]) {\n    this.head = new Piece({ x: 80, y: 80, type: 'head' });\n    this.tail = this.resetHead();\n    this.handleFood();\n    this.setEvents();\n    // this.tail = this.head.next.next;\n  }\n\n  getRandomLevel (): Level {\n    return this.levels[Math.floor(Math.random() * this.levels.length)];\n  }\n\n  // Remove the old chain, put HEAD in the starting position\n  resetHead (): Piece {\n    if (this.head.next) {\n      this.head.next.remove();\n      this.head.next = null;\n    }\n    const LENGTH = 10;\n    const x = (SIZE * LENGTH) + SIZE;\n    const y = SIZE * 5;\n\n    let curr = this.head;\n    this.head.move(x, y);\n\n    for (let i = 1; i <= LENGTH; i += 1) {\n      curr.next = new Piece({ x: x - SIZE * i + 2, y, prev: curr });\n      curr = curr.next;\n    }\n    curr.setType('tail');\n    return curr;\n  }\n\n  /**\n   * Reset all values and restart the game\n   */\n  start (): void {\n    // Don\"t restart already running game\n    if (this.moving === false) {\n      this.tail = this.resetHead();\n      this.length = 0;\n      this.debugSpeed = 0;\n      this.keyHeld = 0;\n      this.score = 0;\n      Directions.flush();\n\n      this.showScore();\n      this.moving = true;\n      requestAnimationFrame(this.frame.bind(this));\n    }\n  }\n\n  /**\n     * GAME OVER\n     */\n  over (): void {\n    this.moving = false;\n    const el = <HTMLDivElement>document.querySelector('.score');\n    el.innerHTML = `\n      Game over! Score: ${this.length * 1000}.\n      <button id=\"start\">Click here to try again.</button>\n    `;\n  }\n\n  /**\n     * Get a random empty location for food\n     */\n  getFoodLocation (): number[] {\n    let x = Utils.rand(MARGIN, document.body.clientWidth - MARGIN, SIZE);\n    let y = Utils.rand(MARGIN, document.body.clientHeight - MARGIN, SIZE);\n\n    // If random spot is already filled, pick a new one\n    // Pick until you find an empty spot\n    // ..... nothing can go wrong with this\n    if (Locations.has(x, y)) {\n      [x, y] = this.getFoodLocation();\n    }\n\n    return [x, y];\n  }\n\n  handleFood (): void {\n    // If the there is no food, create a random one.\n    if (this.food == null) {\n      const [foodX, foodY] = this.getFoodLocation();\n      this.food = new Piece({ x: foodX, y: foodY, type: 'food' });\n    }\n\n    // if head and food collided, replace head with the food\n    // set the correct type for each piece\n    if (this.head.x === this.food.x && this.head.y === this.food.y) {\n      // this.food.next = this.head; // put food at the top of the chain\n      // this.food.direction = this.head.direction; // Needs to go to same direction where head was going\n      // this.head.setType('body'); // head is not body\n      // this.food.setType('head'); // food is now head\n      // this.head = this.food; // Update the Game instance with new head\n      // (this.head.next as Piece).prev = this.head;\n\n      this.swallowFood();\n\n      // Do not count baits grabbed while\n      // in no clip mode\n      if (this.noClip === false) {\n        this.length += 1; // Snake got bigger\n      }\n\n      this.updateScore(); // Calculate the new score\n      this.showScore(); // Update the score\n    }\n  }\n\n  async swallowFood () {\n    if (this.food == null) { return; }\n\n    // this.food.remove();\n    this.tail.next = this.food;\n    this.tail.setType('body');\n    this.food.prev = this.tail;\n    this.tail = this.food;\n    this.food.setType('tail');\n    this.food = null; // food is gone now\n\n    const swallow = (node: Piece) => {\n      if (node.next !== null) {\n        if (node.prev !== null) {\n          node.prev.el.classList.remove('gulp');\n        }\n\n        node.el.classList.add('gulp');\n\n        if (this.paused || !this.moving) { return; } // if paused, stop animation\n\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            swallow(node.next as Piece);\n          });\n        }, this.getSpeed() / 2);\n      }\n    };\n\n    swallow(this.head.next as Piece);\n  }\n\n  getSpeed (): number {\n    const initialSpeed = 130;\n    const calculated = (initialSpeed - this.length * 0.5) + this.debugSpeed + this.keyHeld;\n\n    return Utils.bound(calculated, FASTEST, SLOWEST);\n  }\n\n  updateScore (): number {\n    if (this.noClip === true) {\n      return this.score;\n    }\n\n    const level = 500;\n    const speed = this.getSpeed();\n    const val = (SLOWEST - speed) * this.length;\n    let leveled = Utils.snap(val, level);\n\n    // You should not get zero points\n    if (leveled < level) {\n      leveled = level;\n    }\n\n    this.score += leveled;\n\n    return this.score;\n  }\n\n  showScore (): void {\n    const el = <HTMLDivElement>document.querySelector('.score');\n    this.highScore = this.highScore < this.score ? this.score : this.highScore;\n    el.innerHTML = `\n            Score: ${this.score}, High Score: ${this.highScore}\n        `;\n  }\n\n  frame (): void {\n    if (this.moving) {\n      setTimeout(() => {\n        requestAnimationFrame(this.frame.bind(this));\n      }, this.getSpeed()); // higher the score, faster the snake\n    }\n\n    if (this.paused) {\n      return; // just pause\n    }\n\n    // If head hits an occupied space, GAME OVER\n    if (Locations.has(this.head.x, this.head.y) && this.noClip === false) {\n      return this.over();\n    }\n\n    // If Game is not over, then move the snake to requested direction\n    const direction = Directions.pop();\n\n    // Remove tracking for tails location.\n    Locations.remove(this.tail.x, this.tail.y);\n    // Record the last location of previous head\n    Locations.set(this.head.x, this.head.y);\n\n    // Turn tail into HEAD and move it to where head is supposed to go.\n    this.tail.setType('head');\n    switch (direction) {\n      case keys.RIGHT:\n        this.tail.move(this.head.x + SIZE, this.head.y, keys[direction]);\n        break;\n      case keys.LEFT:\n        this.tail.move(this.head.x - SIZE, this.head.y, keys[direction]);\n        break;\n      case keys.DOWN:\n        this.tail.move(this.head.x, this.head.y + SIZE, keys[direction]);\n        break;\n      case keys.UP:\n        this.tail.move(this.head.x, this.head.y - SIZE, keys[direction]);\n        break;\n      default:\n    }\n\n    const prevHead = this.head;\n\n    // Turn the piece before the tail into new tail.\n    [this.head, this.tail] = [this.tail, this.tail.prev as Piece];\n    this.tail.next = null; // nothing after the tail.\n    this.tail.setType('tail');\n\n\n    // turn previous head into body piece\n    prevHead.setType('body');\n    prevHead.prev = this.head;\n    // if head changed direction, bend this piece accordingly.\n    prevHead.bend(this.head.direction);\n\n    this.head.prev = null; // nothing before the head\n    this.head.next = prevHead; // previous head follows new head\n    this.head.setType('head'); // it is head.\n\n    // Check if we caught caught the food\n    // or we need to place a new food\n    this.handleFood();\n  }\n\n  /**\n   * Don\"t let snake to go backwards\n   */\n  // eslint-disable-next-line class-methods-use-this\n  notBackwards (key: number): boolean {\n    const lastDirection = Directions.peek();\n\n    if ((lastDirection === keys.UP && key === keys.DOWN)\n        || (lastDirection === keys.DOWN && key === keys.UP)\n        || (lastDirection === keys.LEFT && key === keys.RIGHT)\n        || (lastDirection === keys.RIGHT && key === keys.LEFT)) {\n      return false;\n    }\n    return true;\n  }\n\n  setEvents (): void {\n    document.addEventListener('keydown', (e: KeyboardEvent) => {\n      switch (e.keyCode) {\n        // Toggle Grid\n        case keys.G:\n          if (this.gridVisible) {\n            this.removeGrid();\n          } else {\n            this.drawGrid();\n          }\n          break;\n          // Enable No Clip mode.\n        case keys.C:\n          this.noClip = !this.noClip;\n          document.body.classList.toggle('noclip');\n          break;\n          // Slowdown the snake\n        case keys.J:\n          this.debugSpeed += 10;\n          break;\n          // Speed up the snake\n        case keys.K:\n          this.debugSpeed -= 10;\n          break;\n          // Pause or restart the game\n        case keys.SPACE:\n          if (this.moving) {\n            this.paused = !this.paused;\n          } else {\n            this.start();\n          }\n          e.preventDefault();\n          break;\n          // Restart the game\n        case keys.RETURN:\n          this.start();\n          break;\n          // Arrow keys or nothing\n        default:\n          // Select levels\n          // 0 = remove level\n          // 1-9 = render level if exists\n          if (e.keyCode >= 48 && e.keyCode <= 57) {\n            const num = e.keyCode - 48; // to get the pressed number\n\n            if (num === 0) {\n              if (this.currentLevel) {\n                this.currentLevel.remove();\n                this.currentLevel = null;\n              }\n            } else if (num - 1 in this.levels) {\n              if (this.currentLevel) {\n                this.currentLevel.remove();\n              }\n              this.currentLevel = this.levels[num - 1];\n              this.currentLevel.render();\n            }\n          }\n\n          if (e.keyCode in keys && this.notBackwards(e.keyCode)) {\n            if (Directions.peek() !== e.keyCode) {\n              Directions.set(e.keyCode);\n            } else {\n              this.keyHeld -= 50;\n            }\n            e.preventDefault();\n          }\n      }\n    });\n\n    document.addEventListener('keyup', () => {\n      this.keyHeld = 0;\n    });\n\n    document.addEventListener('click', (e: MouseEvent) => {\n      const el = <HTMLElement>e.target;\n      if (el.id === 'start') {\n        this.start();\n      }\n    });\n\n    window.addEventListener('resize', Utils.debounce(() => {\n      if (this.currentLevel) {\n        this.currentLevel.remove();\n        this.currentLevel.render();\n      }\n\n      if (this.gridVisible) {\n        this.removeGrid();\n        this.drawGrid();\n      }\n\n      if (this.food !== null) {\n        this.food.remove();\n        this.food = null;\n        this.handleFood();\n      }\n    }, 100));\n  }\n\n  removeGrid (): void {\n    const grids = document.querySelectorAll('.vertical-grid, .horizontal-grid');\n    Array.from(grids).forEach(div => {\n      Utils.removeNode(div);\n    });\n\n    this.gridVisible = false;\n  }\n\n  drawGrid (): void {\n    for (let x = 0; x < document.body.clientWidth; x += SIZE) {\n      const div = document.createElement('div');\n      div.style.top = '0px';\n      div.style.left = `${x}px`;\n      div.classList.add('vertical-grid');\n      document.body.appendChild(div);\n    }\n\n    for (let x = 0; x < document.body.clientHeight; x += SIZE) {\n      const div = document.createElement('div');\n      div.style.left = '0px';\n      div.style.top = `${x}px`;\n      div.classList.add('horizontal-grid');\n      document.body.appendChild(div);\n    }\n\n    this.gridVisible = true;\n  }\n}\n","import Piece from './Piece';\nimport { SIZE } from './constants';\n\ntype coord = [number, number];\ntype line = coord[];\nexport type LevelMap = line[];\n\nexport default class Level {\n  private pieces: Piece[] = [];\n\n  constructor (private generatorFunction: (rows: number, cols: number) => LevelMap) {\n    this.generatorFunction = generatorFunction;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private translate (x: number, y: number): coord {\n    return [Math.floor(x) * SIZE, Math.floor(y) * SIZE];\n  }\n\n  remove (): void {\n    this.pieces.forEach(piece => {\n      piece.remove();\n    });\n  }\n\n  line (x0: number, y0: number, x1: number, y1: number): void {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = (x0 < x1) ? 1 : -1;\n    const sy = (y0 < y1) ? 1 : -1;\n    let err = dx - dy;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Waiting for proposal\n      // https://github.com/Microsoft/TypeScript/issues/5296\n      // this.pieces.push(new Piece(...this.translate(x0, y0), \"wall\"));\n      const [tx0, ty0] = this.translate(x0, y0);\n      this.pieces.push(new Piece({ x: tx0, y: ty0, type: 'wall' }));\n\n      // break when line is done\n      if (Math.abs(x0 - x1) <= 0.5 && Math.abs(y0 - y1) <= 0.5) break;\n\n      const e2 = 2 * err;\n\n      if (e2 > -dy) {\n        err -= dy;\n        x0 += sx;\n      }\n\n      if (e2 < dx) {\n        err += dx;\n        y0 += sy;\n      }\n    }\n  }\n\n  render (): void {\n    const cols = Math.floor(document.body.clientHeight / SIZE);\n    const rows = Math.floor(document.body.clientWidth / SIZE);\n    const level = this.generatorFunction(rows, cols);\n\n    level.forEach(line => {\n      const [x0, y0]: coord = line[0];\n      const [x1, y1]: coord = line[1];\n\n      this.line(x0, y0, x1, y1);\n    });\n  }\n}\n","import Level, { LevelMap } from '../Level';\n\nexport default new Level((rows, cols): LevelMap => {\n  const [halfCols, halfRows] = [cols / 2, rows / 2];\n  return [\n    // top walls\n    [[3, 3], [halfRows - 3, 3]],\n    [[halfRows + 3, 3], [rows - 3, 3]],\n\n    // right walls\n    [[rows - 3, 3], [rows - 3, halfCols - 3]],\n    [[rows - 3, halfCols + 3], [rows - 3, cols - 3]],\n\n    // bottom walls\n    [[rows - 3, cols - 3], [halfRows + 3, cols - 3]],\n    [[halfRows - 3, cols - 3], [3, cols - 3]],\n\n    // Left walls\n    [[3, cols - 3], [3, halfCols + 3]],\n    [[3, halfCols - 3], [3, 3]],\n  ];\n});\n","import Level, { LevelMap } from '../Level';\n\nexport default new Level((rows, cols): LevelMap => {\n  const [halfRows, halfCols] = [rows / 2, cols / 2];\n  return [\n    [[halfRows - 2, halfCols], [halfRows + 2, halfCols]],\n    [[halfRows, halfCols - 2], [halfRows, halfCols + 2]],\n\n    [[halfRows - 8, halfCols - 8], [halfRows - 3, halfCols - 3]],\n    [[halfRows + 3, halfCols + 3], [halfRows + 8, halfCols + 8]],\n\n    [[halfRows + 8, halfCols - 8], [halfRows + 3, halfCols - 3]],\n    [[halfRows - 3, halfCols + 3], [halfRows - 8, halfCols + 8]],\n  ];\n});\n","import Level, { LevelMap } from '../Level';\n\nexport default new Level((rows, cols): LevelMap => {\n  const [halfRows, halfCols] = [rows / 2, cols / 2];\n  return [\n    // top walls\n    [[3, 3], [halfRows - 3, 3]],\n    [[halfRows + 3, 3], [rows - 3, 3]],\n\n    // right walls\n    [[rows - 3, 3], [rows - 3, halfCols - 3]],\n    [[rows - 3, halfCols + 3], [rows - 3, cols - 3]],\n\n    // bottom walls\n    [[rows - 3, cols - 3], [halfRows + 3, cols - 3]],\n    [[halfRows - 3, cols - 3], [3, cols - 3]],\n\n    // Left walls\n    [[3, cols - 3], [3, halfCols + 3]],\n    [[3, halfCols - 3], [3, 3]],\n\n    // inner walls\n    // top walls\n    [[9, 9], [halfRows - 6, 9]],\n    [[halfRows + 6, 9], [rows - 9, 9]],\n\n    // right walls\n    [[rows - 9, 9], [rows - 9, halfCols - 6]],\n    [[rows - 9, halfCols + 6], [rows - 9, cols - 9]],\n\n    // bottom walls\n    [[rows - 9, cols - 9], [halfRows + 6, cols - 9]],\n    [[halfRows - 6, cols - 9], [9, cols - 9]],\n\n    // Left walls\n    [[9, cols - 9], [9, halfCols + 6]],\n    [[9, halfCols - 6], [9, 9]],\n  ];\n});\n","import Level, { LevelMap } from '../Level';\n\nexport default new Level((rows, cols): LevelMap => {\n  // const [halfRows, halfCols] = [rows / 2, cols / 2];\n  return [\n    [[3, 3], [rows - 3, cols - 3]],\n    [[rows - 3, 3], [3, cols - 3]],\n  ];\n});\n","import Game from './Game';\nimport level1 from './levels/level-1';\nimport level2 from './levels/level-2';\nimport level3 from './levels/level-3';\nimport level4 from './levels/level-4';\n\n\nexport default new Game([\n  level1,\n  level2,\n  level3,\n  level4,\n]);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}